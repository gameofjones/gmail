{"version":3,"sources":["components/EmailTab.tsx","components/Label.tsx","components/LabelPanel.tsx","App.js","serviceWorker.js","index.js"],"names":["EmailTab","index","subject","sender","sent","className","styles","tab","leftSide","style","backgroundColor","cx","contents","altBackground","flex","Typography","variant","display","gutterBottom","rightSide","css","padding","color","cursor","whiteSpace","overflow","textOverflow","maxWidth","alignItems","margin","flexDirection","selected","Label","name","children","label","LabelPanel","custom","labelPanel","standardIcon","buffer","map","key","height","paddingTop","mockCustom","mockEmails","App","app","fontWeight","letterSpacing","toolbar","Input","id","startAdornment","InputAdornment","position","panelContainer","emailPanel","email","previewPanel","border","borderLeft","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3311225.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\"\nimport { css, cx } from \"emotion\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\"\n\ninterface EmailTabProps {\n  index: number\n  subject: string\n  sender: string,\n  sent: string,\n  selected?: boolean,\n}\n\nconst EmailTab: FunctionComponent<EmailTabProps> = ({ index, subject, sender, sent }) => {\n  return (\n    <div className={styles.tab}>\n      <div className={styles.leftSide} style={{ backgroundColor: \"#FBC02D\" }} />\n      <div className={cx(styles.contents, { [styles.altBackground]: index%2 === 0 })}>\n        <div style={{ flex: 1 }}>\n          <label className={styles.subject}>{subject}</label>\n          <Typography\n            variant=\"caption\"\n            display=\"block\"\n            style={styles.sender}\n            gutterBottom>\n            {sender}\n          </Typography>\n        </div>\n        <div className={styles.rightSide}>\n          <AttachFileIcon />\n          <Typography\n            variant=\"caption\"\n            display=\"block\"\n            style={styles.sender}\n            gutterBottom>\n            {sent}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailTab\n\nconst styles = {\n  tab: css({\n    display: \"flex\",\n  }),\n  contents: css({\n    flex: 1,\n    display: \"flex\",\n    padding: \"20px 20px 10px 20px\",\n    color: \"#585858\",\n    backgroundColor: \"#F9F9F8\",\n    cursor: \"pointer\",\n    \":hover\": {\n      backgroundColor: \"#BBDEFB\"\n    },\n  }),\n  altBackground: css({\n    backgroundColor: \"#F1F1F1\",\n  }),\n  subject: css({\n    padding: \"10px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    maxWidth: \"285px\",\n    display: \"block\",\n  }),\n  sender: {\n    padding: \"10px 10px 10px 12px\"\n  },\n  leftSide: css({\n    flex: \"0 3px\",\n  }),\n  rightSide: css({\n    flex: \"0 90px\",\n    alignItems: \"center\",\n    display: \"flex\",\n    margin: \"auto\",\n    flexDirection: \"column\",\n  }),\n  selected: {\n    backgroundColor: \"#FDD835\"\n  }\n}\n","import React, { FunctionComponent } from \"react\"\nimport { css, cx } from \"emotion\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface LabelProps {\n  name: string\n  selected?: boolean\n}\n\nconst Label: FunctionComponent<LabelProps> = ({ name, children, selected }) => {\n  return (\n    <div className={cx(styles.label, { [styles.selected]: selected })}>\n      {children}\n      <Typography variant=\"subtitle2\" style={{ margin: \"2px auto 0 4px\" }} gutterBottom>\n        {name}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Label\n\nconst styles = {\n  label: css({\n    display: \"flex\",\n    \"align-items\": \"center\",\n    color: \"darkgray\",\n    padding: \"5px 0\",\n    \":hover\": {\n      color: \"#2979FF\",\n      cursor: \"pointer\",\n    }\n  }),\n  selected: css({\n    color: \"#2979FF\",\n  })\n}\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport Typography from \"@material-ui/core/Typography\"\nimport InboxIcon from \"@material-ui/icons/Inbox\"\nimport SnoozeIcon from \"@material-ui/icons/Snooze\"\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\"\nimport StarRateIcon from \"@material-ui/icons/StarRate\"\nimport SendIcon from \"@material-ui/icons/Send\"\nimport DraftsIcon from \"@material-ui/icons/Drafts\"\nimport ReportIcon from \"@material-ui/icons/Report\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport LensIcon from \"@material-ui/icons/Lens\"\nimport Label from \"./Label\"\n\ninterface LabelPanelProps {\n  custom: string[]\n}\n\nconst LabelPanel: FunctionComponent<LabelPanelProps> = ({ custom }) => {\n  return (\n    <div className={styles.labelPanel}>\n      <Typography variant=\"h5\" gutterBottom>\n        Mail\n      </Typography>\n      <Label name=\"Inbox\" selected><InboxIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Snoozed\"><SnoozeIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Important\"><LabelImportantIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Starred\"><StarRateIcon /></Label>\n      <Label name=\"Sent\"><SendIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Drafts\"><DraftsIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Spam\"><ReportIcon style={styles.standardIcon} /></Label>\n      <Label name=\"Trash\"><DeleteIcon style={styles.standardIcon} /></Label>\n      <div className={styles.buffer} />\n      <Typography variant=\"h5\">\n        Folders\n      </Typography>\n      {\n        custom.map((label, index) => {\n          return (\n            <Label key={index} name={label}>\n              <LensIcon style={{ height: \"10px\", color: \"red\" }} />\n            </Label>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default LabelPanel\n\nconst styles = {\n  labelPanel: css({\n    flex: \"0 0 200px\",\n    padding: \"20px 0\",\n    color: \"#585858\",\n  }),\n  label: css({\n    display: \"flex\",\n    \"align-items\": \"center\",\n    color: \"darkgray\",\n    padding: \"5px 0\",\n  }),\n  standardIcon: {\n    height: \"16px\"\n  },\n  buffer: css({\n    paddingTop: \"10px\",\n  })\n}","import React from 'react';\nimport Input from '@material-ui/core/Input'\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Typography from \"@material-ui/core/Typography\"\nimport './App.css';\nimport 'typeface-roboto';\nimport { css } from \"emotion\";\nimport { LabelPanel, EmailTab } from \"./components\"\n\nconst mockCustom = [\"Receipts\"]\nconst mockEmails = [\n  {\n    subject: \"First Email\",\n    sender: \"author@gmail.com\",\n    sent: \"8:08 AM\"\n  },\n  {\n    subject: \"Second Email with a longer name ya'llvgvggggggggg\",\n    sender: \"Kiah Jones\",\n    sent: \"Fri 3:20 PM\"\n  },\n  {\n    subject: \"Third Email\",\n    sender: \"Deep Badesha\",\n    sent: \"Fri 3:20 PM\"\n  },\n]\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Typography variant=\"h4\" style={{ fontWeight: \"bold\", letterSpacing: \"2px\", padding: \"15px 15px 15px 30px\", color: \"#2979FF\"}}>\n        G<label style={{ color: \"red\" }}>O</label><label style={{ color: \"#FDD835\" }}>J</label>\n      </Typography>\n      <div className={styles.toolbar}>\n        <Input\n          id=\"standard-adornment-amount\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon style={{ color: \"#2979FF\" }}/>\n            </InputAdornment>\n          }\n        />\n      </div>\n      <div className={styles.panelContainer}> \n        <LabelPanel custom={mockCustom} />\n        <div className={styles.emailPanel}>\n          {\n            mockEmails.map((email, index) => \n              <EmailTab\n                index={index}\n                subject={email.subject}\n                sender={email.sender}\n                sent={email.sent}\n              />\n            )\n          }\n        </div>\n        <div className={styles.previewPanel}>\n          <Typography variant=\"h5\" gutterBottom>\n            Lorem Ipsum\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst appBorder = \"2px solid #F4F4F4\"\n\nconst styles = {\n  app: css({\n\n  }),\n  toolbar: css({\n    height: \"80px\",\n    display: \"flex\",\n    \"align-items\": \"center\",\n    padding: \"0 30px 0\",\n    backgroundColor: \"#FCFCFA\",\n    color: \"#2962FF\",\n    border: appBorder,\n  }),\n  panelContainer: css({\n    height: \"calc(100vh - 155px)\",\n    display: \"flex\",\n    padding: \"0 30px 0\",\n  }),\n  emailPanel: css({\n    flex: \"0 400px\",\n    borderLeft: \"1px solid #F4F4F4\",\n  }),\n  previewPanel: css({\n    flex: 1,\n    borderLeft: appBorder,\n    color: \"#585858\",\n    padding: \"20px 30px\",\n  }),\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["mocks/labels.ts","mocks/messages.ts","api/MailApiMock.ts","store/actions.ts","store/reducer.ts","store/StoreProvider.tsx","components/AppComponent.tsx","components/EmptyState.tsx","components/Label.tsx","constants.ts","components/LabelPane.tsx","components/Logo.tsx","components/MessageComponent.tsx","components/MessagePane.tsx","components/Buffer.tsx","components/PreviewPane.tsx","components/RightPaneContainer.tsx","components/Toolbar.tsx","App.js","serviceWorker.js","index.js"],"names":["Labels","id","name","type","messagesUnread","color","backgroundColor","randomDate","Date","Math","floor","random","toDateString","examplePayload1","headers","value","mimeType","body","data","examplePayload2","examplePayload3","Messages","payload","getMessages","labelId","Promise","resolve","reject","setMessage","dispatch","message","setMessages","label","a","async","messages","mailReducer","state","action","selectedLabel","selectedMessage","initialState","labels","undefined","MailContext","createContext","MailContextProvider","props","useReducer","Provider","children","MailContextConsumer","Consumer","styles","header","css","display","position","boxShadow","headerRight","paddingRight","alignItems","headerLeft","flex","avatar","marginLeft","background","cursor","panes","height","padding","AppComponent","useContext","useState","setLabels","useEffect","length","then","apiLabels","className","Avatar","emptyState","marginTop","textAlign","EmptyState","width","alt","src","selected","fontWeight","LabelComponent","title","window","document","cx","onClick","Actions","Typography","variant","style","margin","gutterBottom","marginRight","labelPanel","standardIcon","buffer","paddingTop","STANDARD_ICONS","LabelPane","systemLabels","filter","userLabels","map","index","Label","key","typography","letterSpacing","image","paddingLeft","logo","G","O","J","Logo","HEADERS","altBackground","contents","subject","whiteSpace","overflow","textOverflow","maxWidth","sender","leftSide","rightSide","flexDirection","MessageComponent","isSelected","setSelected","setSubject","from","setFrom","date","setDate","getHeaderValue","find","messagePane","overflowY","borderLeft","MessagePane","Buffer","PreviewPane","tos","setTos","to","ReactHtmlParser","atob","previewPanel","RightPaneContainer","toolbar","borderBottom","Toolbar","Input","startAdornment","InputAdornment","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d970905.chunk.js","sourcesContent":["import { Label } from \"../models/gmail\"\n\nconst Labels: Label[] = [\n  {\n    id: \"1\",\n    name: \"Inbox\",\n    type: \"System\",\n    messagesUnread: 3,\n  },\n  {\n    id: \"2\",\n    name: \"Snoozed\",\n    type: \"System\",\n    messagesUnread: 0,\n  },\n  {\n    id: \"3\",\n    name: \"Important\",\n    type: \"System\",\n    messagesUnread: 1,\n  },\n  {\n    id: \"4\",\n    name: \"Starred\",\n    type: \"System\",\n    messagesUnread: 0,\n  },\n  {\n    id: \"5\",\n    name: \"Sent\",\n    type: \"System\",\n    messagesUnread: 0,\n  },\n  {\n    id: \"6\",\n    name: \"Drafts\",\n    type: \"System\",\n    messagesUnread: 1,\n  },\n  {\n    id: \"7\",\n    name: \"Spam\",\n    type: \"System\",\n    messagesUnread: 1,\n    color: {\n      backgroundColor: \"red\"      \n    }\n  },\n  {\n    id: \"8\",\n    name: \"Trash\",\n    type: \"System\",\n    messagesUnread: 30,\n  },\n  {\n    id: \"9\",\n    name: \"Salesforce\",\n    type: \"User\",\n    messagesUnread: 0,\n    color: {\n      backgroundColor: \"green\"      \n    }\n  },\n  {\n    id: \"10\",\n    name: \"File Format\",\n    type: \"User\",\n    messagesUnread: 2,\n    color: {\n      backgroundColor: \"orange\"      \n    }\n  },\n]\n\nexport default Labels","import { Message, MessagePart } from \"../models/gmail\"\n\nconst randomDate = (): string => {\n  return new Date(+(new Date()) - Math.floor(Math.random()*10000000000)).toDateString()\n}\n\nconst examplePayload1: MessagePart = {\n  headers: [\n    { name: \"from\", value: \"Vineet\" },\n    { name: \"subject\", value: \"Package Process\" },\n    { name: \"date\", value: randomDate() },\n  ],\n  mimeType: \"text/html\",\n  body: {\n    data: \"PHA+SGVsbG8gVGVhbSw8L3A+IAo8cD4KICBBdHRhY2hpbmcgdGhpcyBkb2N1bWVudCB0byB0aGUgZW1haWwgdGhyZWFkLgo8L3A+IAo8cD4KICBUaGlzIGhhcyBhbHNvIGJlZW4gcG9zdGVkIGFuZCBwaW5uZWQgb24gdGhlIHNsYWNrIGNoYW5uZWwuCjwvcD4KPHA+CiAgIEhhcHB5IE1vbmRheSDwn5iDCjwvcD4KPHA+CiAgUmVnYXJkcywgPGJyLz5WaW5lZXQKPC9wPg==\",\n  }\n}\n\nconst examplePayload2: MessagePart = {\n  headers:[\n    { name: \"from\", value: \"author@gmail.com\" },\n    { name: \"subject\", value: \"Second Email\" },\n    { name: \"date\", value: randomDate() },\n    { name: \"to\", value: \"Kiah Jones\" },\n    { name: \"to\", value: \"Madhu\" },\n  ],\n  mimeType: \"text/html\",\n  body: {\n    data: \"PGgxPkVudGVyIHRoZSBtYWluIGhlYWRpbmcsIHVzdWFsbHkgdGhlIHNhbWUgYXMgdGhlIHRpdGxlLjwvaDE+CjxwPkJlIDxiPmJvbGQ8L2I+IGluIHN0YXRpbmcgeW91ciBrZXkgcG9pbnRzLiBQdXQgdGhlbSBpbiBhIGxpc3Q6IDwvcD4KPHVsPgo8bGk+VGhlIGZpcnN0IGl0ZW0gaW4geW91ciBsaXN0PC9saT4KPGxpPlRoZSBzZWNvbmQgaXRlbTsgPGk+aXRhbGljaXplPC9pPiBrZXkgd29yZHM8L2xpPgo8L3VsPgo8cD5JbXByb3ZlIHlvdXIgaW1hZ2UgYnkgaW5jbHVkaW5nIGFuIGltYWdlLiA8L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFNU2FidnplSEwuX0FDX1VMMzIwX1NSMjU0LDMyMF8uanBnIiBhbHQ9IkEgR3JlYXQgSFRNTCBSZXNvdXJjZSI+PC9wPgo8cD5BZGQgYSBsaW5rIHRvIHlvdXIgZmF2b3JpdGUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZHVtbWllcy5jb20vIj5XZWIgc2l0ZTwvYT4uCkJyZWFrIHVwIHlvdXIgcGFnZSB3aXRoIGEgaG9yaXpvbnRhbCBydWxlIG9yIHR3by4gPC9wPgo8aHI+CjxwPkZpbmFsbHksIGxpbmsgdG8gPGEgaHJlZj0icGFnZTIuaHRtbCI+YW5vdGhlciBwYWdlPC9hPiBpbiB5b3VyIG93biBXZWIgc2l0ZS48L3A+CjwhLS0gQW5kIGFkZCBhIGNvcHlyaWdodCBub3RpY2UuLS0+CjxwPiYjMTY5OyBXaWxleSBQdWJsaXNoaW5nLCAyMDExPC9wPg==\",\n  }\n}\n\nconst examplePayload3: MessagePart = {\n  headers:[\n    { name: \"from\", value: \"Kiah Jones\" },\n    { name: \"subject\", value: \"Third Email with a longer name ya'llvgvggggggggg\" },\n    { name: \"date\", value: randomDate() },\n  ],\n  mimeType: \"text/html\",\n  body: {\n    data: \"PCEtLSAjIyMjIyMjICBZQVksIEkgQU0gVEhFIFNPVVJDRSBFRElUT1IhICMjIyMjIyMjIy0tPgo8aDEgc3R5bGU9ImNvbG9yOiAjNWU5Y2EwOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj5Zb3UgY2FuIGVkaXQgPHNwYW4gc3R5bGU9ImNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj50aGlzIGRlbW88L3NwYW4+IHRleHQhPC9oMT4KPGgyIHN0eWxlPSJjb2xvcjogIzJlNmM4MDsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+SG93IHRvIHVzZSB0aGUgZWRpdG9yOjwvaDI+CjxwPlBhc3RlIHlvdXIgZG9jdW1lbnRzIGluIHRoZSB2aXN1YWwgZWRpdG9yIG9uIHRoZSBsZWZ0IG9yIHlvdXIgSFRNTCBjb2RlIGluIHRoZSBzb3VyY2UgZWRpdG9yIGluIHRoZSByaWdodC4gPGJyIC8+RWRpdCBhbnkgb2YgdGhlIHR3byBhcmVhcyBhbmQgc2VlIHRoZSBvdGhlciBjaGFuZ2luZyBpbiByZWFsIHRpbWUuJm5ic3A7PC9wPgo8cD5DbGljayB0aGUgPHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMyYjIzMDE7IGNvbG9yOiAjZmZmOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHBhZGRpbmc6IDNweCAxMHB4OyBmb250LXdlaWdodDogYm9sZDsgYm9yZGVyLXJhZGl1czogNXB4OyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1iZ2NvbG9yPSIiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+Q2xlYW48L3NwYW4+IGJ1dHRvbiB0byBjbGVhbiB5b3VyIHNvdXJjZSBjb2RlLjwvcD4KPGgyIHN0eWxlPSJjb2xvcjogIzJlNmM4MDsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+U29tZSB1c2VmdWwgZmVhdHVyZXM6PC9oMj4KPG9sIHN0eWxlPSJsaXN0LXN0eWxlOiBub25lOyBmb250LXNpemU6IDE0cHg7IGxpbmUtaGVpZ2h0OiAzMnB4OyBmb250LXdlaWdodDogYm9sZDsiPgo8bGkgc3R5bGU9ImNsZWFyOiBib3RoOyI+PGltZyBzdHlsZT0iZmxvYXQ6IGxlZnQ7IiBzcmM9Imh0dHBzOi8vaHRtbC1vbmxpbmUuY29tL2ltZy8wMS1pbnRlcmFjdGl2ZS1jb25uZWN0aW9uLnBuZyIgYWx0PSJpbnRlcmFjdGl2ZSBjb25uZWN0aW9uIiB3aWR0aD0iNDUiIC8+IEludGVyYWN0aXZlIHNvdXJjZSBlZGl0b3I8L2xpPgo8bGkgc3R5bGU9ImNsZWFyOiBib3RoOyI+PGltZyBzdHlsZT0iZmxvYXQ6IGxlZnQ7IiBzcmM9Imh0dHBzOi8vaHRtbC1vbmxpbmUuY29tL2ltZy8wMi1odG1sLWNsZWFuLnBuZyIgYWx0PSJodG1sIGNsZWFuZXIiIHdpZHRoPSI0NSIgLz4gSFRNTCBDbGVhbmluZzwvbGk+CjxsaSBzdHlsZT0iY2xlYXI6IGJvdGg7Ij48aW1nIHN0eWxlPSJmbG9hdDogbGVmdDsiIHNyYz0iaHR0cHM6Ly9odG1sLW9ubGluZS5jb20vaW1nLzAzLWRvY3MtdG8taHRtbC5wbmciIGFsdD0iV29yZCB0byBodG1sIiB3aWR0aD0iNDUiIC8+IFdvcmQgdG8gSFRNTCBjb252ZXJzaW9uPC9saT4KPGxpIHN0eWxlPSJjbGVhcjogYm90aDsiPjxpbWcgc3R5bGU9ImZsb2F0OiBsZWZ0OyIgc3JjPSJodHRwczovL2h0bWwtb25saW5lLmNvbS9pbWcvMDQtcmVwbGFjZS5wbmciIGFsdD0icmVwbGFjZSB0ZXh0IiB3aWR0aD0iNDUiIC8+IEZpbmQgYW5kIFJlcGxhY2U8L2xpPgo8bGkgc3R5bGU9ImNsZWFyOiBib3RoOyI+PGltZyBzdHlsZT0iZmxvYXQ6IGxlZnQ7IiBzcmM9Imh0dHBzOi8vaHRtbC1vbmxpbmUuY29tL2ltZy8wNS1naWJiZXJpc2gucG5nIiBhbHQ9ImdpYmJlcmlzaCIgd2lkdGg9IjQ1IiAvPiBMb3JlbS1JcHN1bSBnZW5lcmF0b3I8L2xpPgo8bGkgc3R5bGU9ImNsZWFyOiBib3RoOyI+PGltZyBzdHlsZT0iZmxvYXQ6IGxlZnQ7IiBzcmM9Imh0dHBzOi8vaHRtbC1vbmxpbmUuY29tL2ltZy82LXRhYmxlLWRpdi1odG1sLnBuZyIgYWx0PSJodG1sIHRhYmxlIGRpdiIgd2lkdGg9IjQ1IiAvPiBUYWJsZSB0byBESVYgY29udmVyc2lvbjwvbGk+Cjwvb2w+CjxwPiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOzwvcD4KPGgyIHN0eWxlPSJjb2xvcjogIzJlNmM4MDsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+Q2xlYW5pbmcgb3B0aW9uczo8L2gyPgo8dGFibGUgY2xhc3M9ImVkaXRvckRlbW9UYWJsZSI+Cjx0aGVhZD4KPHRyPgo8dGQ+TmFtZSBvZiB0aGUgZmVhdHVyZTwvdGQ+Cjx0ZD5FeGFtcGxlPC90ZD4KPHRkPkRlZmF1bHQ8L3RkPgo8L3RyPgo8L3RoZWFkPgo8dGJvZHk+Cjx0cj4KPHRkPlJlbW92ZSB0YWcgYXR0cmlidXRlczwvdGQ+Cjx0ZD48aW1nIHN0eWxlPSJtYXJnaW46IDFweCAxNXB4OyIgc3JjPSJpbWFnZXMvc21pbGV5LnBuZyIgYWx0PSJsYXVnaGluZyIgd2lkdGg9IjQwIiBoZWlnaHQ9IjE2IiAvPiAoZXhjZXB0IDxzdHJvbmc+aW1nPC9zdHJvbmc+LTxlbT5zcmM8L2VtPiBhbmQgPHN0cm9uZz5hPC9zdHJvbmc+LTxlbT5ocmVmPC9lbT4pPC90ZD4KPHRkPiZuYnNwOzwvdGQ+CjwvdHI+Cjx0cj4KPHRkPlJlbW92ZSBpbmxpbmUgc3R5bGVzPC90ZD4KPHRkPjxzcGFuIHN0eWxlPSJjb2xvcjogZ3JlZW47IGZvbnQtc2l6ZTogMTNweDsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+WW91IDxzdHJvbmcgc3R5bGU9ImNvbG9yOiBibHVlOyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+c2hvdWxkIG5ldmVyPC9zdHJvbmc+Jm5ic3A7dXNlIGlubGluZSBzdHlsZXMhPC9zcGFuPjwvdGQ+Cjx0ZD48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE3cHg7IGNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj54PC9zdHJvbmc+PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVtb3ZlIGNsYXNzZXMgYW5kIElEczwvdGQ+Cjx0ZD48c3BhbiBpZD0iZGVtb0lkIj5Vc2UgY2xhc3NlcyB0byA8c3Ryb25nIGNsYXNzPSJkZW1vQ2xhc3MiPnN0eWxlIGV2ZXJ5dGhpbmc8L3N0cm9uZz4uPC9zcGFuPjwvdGQ+Cjx0ZD48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE3cHg7IGNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj54PC9zdHJvbmc+PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVtb3ZlIGFsbCB0YWdzPC90ZD4KPHRkPlRoaXMgbGVhdmVzIDxzdHJvbmcgc3R5bGU9ImNvbG9yOiBibHVlOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj5vbmx5IHRoZSBwbGFpbjwvc3Ryb25nPiA8ZW0+dGV4dDwvZW0+LiA8aW1nIHN0eWxlPSJtYXJnaW46IDFweDsiIHNyYz0iaW1hZ2VzL3NtaWxleS5wbmciIGFsdD0ibGF1Z2hpbmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgLz48L3RkPgo8dGQ+Jm5ic3A7PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVtb3ZlIHN1Y2Nlc3NpdmUgJmFtcDtuYnNwO3M8L3RkPgo8dGQ+TmV2ZXIgdXNlIG5vbi1icmVha2luZyBzcGFjZXMmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDt0byBzZXQgbWFyZ2lucy48L3RkPgo8dGQ+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxN3B4OyBjb2xvcjogIzJiMjMwMTsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+eDwvc3Ryb25nPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPlJlbW92ZSBlbXB0eSB0YWdzPC90ZD4KPHRkPkVtcHR5IHRhZ3Mgc2hvdWxkIGdvITwvdGQ+Cjx0ZD4mbmJzcDs8L3RkPgo8L3RyPgo8dHI+Cjx0ZD5SZW1vdmUgdGFncyB3aXRoIG9uZSAmYW1wO25ic3A7PC90ZD4KPHRkPlRoaXMgbWFrZXMmbmJzcDtubyBzZW5zZSE8L3RkPgo8dGQ+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxN3B4OyBjb2xvcjogIzJiMjMwMTsiIGRhdGEtZGFya3JlYWRlci1pbmxpbmUtY29sb3I9IiI+eDwvc3Ryb25nPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPlJlbW92ZSBzcGFuIHRhZ3M8L3RkPgo8dGQ+U3BhbiB0YWdzIHdpdGggPHNwYW4gc3R5bGU9ImNvbG9yOiBncmVlbjsgZm9udC1zaXplOiAxM3B4OyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj5hbGwgc3R5bGVzPC9zcGFuPjwvdGQ+Cjx0ZD48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE3cHg7IGNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj54PC9zdHJvbmc+PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVtb3ZlIGltYWdlczwvdGQ+Cjx0ZD5JIGFtIGFuIGltYWdlOiA8aW1nIHNyYz0iaW1hZ2VzL3NtaWxleS5wbmciIGFsdD0ibGF1Z2hpbmciIC8+PC90ZD4KPHRkPiZuYnNwOzwvdGQ+CjwvdHI+Cjx0cj4KPHRkPlJlbW92ZSBsaW5rczwvdGQ+Cjx0ZD48YSBocmVmPSJodHRwczovL2h0bWwtb25saW5lLmNvbSI+VGhpcyBpczwvYT4gYSBsaW5rLjwvdGQ+Cjx0ZD4mbmJzcDs8L3RkPgo8L3RyPgo8dHI+Cjx0ZD5SZW1vdmUgdGFibGVzPC90ZD4KPHRkPlRha2VzIGV2ZXJ5dGhpbmcgb3V0IG9mIHRoZSB0YWJsZS48L3RkPgo8dGQ+Jm5ic3A7PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVwbGFjZSB0YWJsZSB0YWdzIHdpdGggc3RydWN0dXJlZCBkaXZzPC90ZD4KPHRkPlRoaXMgdGV4dCBpcyBpbnNpZGUgYSB0YWJsZS48L3RkPgo8dGQ+Jm5ic3A7PC90ZD4KPC90cj4KPHRyPgo8dGQ+UmVtb3ZlIGNvbW1lbnRzPC90ZD4KPHRkPlRoaXMgaXMgb25seSB2aXNpYmxlIGluIHRoZSBzb3VyY2UgZWRpdG9yIDwhLS0gSEVMTE8hIC0tPjwvdGQ+Cjx0ZD48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE3cHg7IGNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj54PC9zdHJvbmc+PC90ZD4KPC90cj4KPHRyPgo8dGQ+RW5jb2RlIHNwZWNpYWwgY2hhcmFjdGVyczwvdGQ+Cjx0ZD48c3BhbiBzdHlsZT0iY29sb3I6IHJlZDsgZm9udC1zaXplOiAxN3B4OyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj4maGVhcnRzOzwvc3Bhbj4gPHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAyMHB4OyI+4pi6IOKYhTwvc3Ryb25nPiAmZ3Q7Jmx0OzwvdGQ+Cjx0ZD48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE3cHg7IGNvbG9yOiAjMmIyMzAxOyIgZGF0YS1kYXJrcmVhZGVyLWlubGluZS1jb2xvcj0iIj54PC9zdHJvbmc+PC90ZD4KPC90cj4KPHRyPgo8dGQ+U2V0IG5ldyBsaW5lcyBhbmQgdGV4dCBpbmRlbnRzPC90ZD4KPHRkPk9yZ2FuaXplIHRoZSB0YWdzIGluIGEgbmljZSB0cmVlIHZpZXcuPC90ZD4KPHRkPiZuYnNwOzwvdGQ+CjwvdHI+CjwvdGJvZHk+CjwvdGFibGU+CjxwPjxzdHJvbmc+Jm5ic3A7PC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPlNhdmUgdGhpcyBsaW5rIGludG8geW91ciBib29rbWFya3MgYW5kIHNoYXJlIGl0IHdpdGggeW91ciBmcmllbmRzLiBJdCBpcyBhbGwgRlJFRSEgPC9zdHJvbmc+PGJyIC8+PHN0cm9uZz5FbmpveSE8L3N0cm9uZz48L3A+CjxwPjxzdHJvbmc+Jm5ic3A7PC9zdHJvbmc+PC9wPg==\",\n  }\n}\n\nconst Messages: { [key: string]: Message[] } = {\n  \"1\": [\n    {\n      id: \"1\",\n      payload: examplePayload1,\n    },\n    {\n      id: \"2\",\n      payload: examplePayload2,\n    },\n    {\n      id: \"3\",\n      payload: examplePayload3,\n    },\n  ],\n  \"2\": [],\n  \"3\": [\n    {\n      id: \"4\",\n      payload: examplePayload1,\n    },\n  ],\n  \"4\": [],\n  \"5\": [],\n  \"6\": [\n    {\n      id: \"5\",\n      payload: examplePayload2,\n    },\n  ],\n  \"7\": [\n    {\n      id: \"6\",\n      payload: examplePayload3,\n    },\n  ],\n  \"8\": [\n    {\n      id: \"7\",\n      payload: examplePayload1,\n    },\n    {\n      id: \"8\",\n      payload: examplePayload2,\n    },\n    {\n      id: \"9\",\n      payload: examplePayload3,\n    },\n    {\n      id: \"10\",\n      payload: examplePayload1,\n    },\n    {\n      id: \"11\",\n      payload: examplePayload2,\n    },\n    {\n      id: \"12\",\n      payload: examplePayload3,\n    },\n    {\n      id: \"13\",\n      payload: examplePayload1,\n    },\n    {\n      id: \"14\",\n      payload: examplePayload2,\n    },\n    {\n      id: \"15\",\n      payload: examplePayload3,\n    },\n    {\n      id: \"16\",\n      payload: examplePayload1,\n    },\n    {\n      id: \"17\",\n      payload: examplePayload2,\n    },\n  ],\n  \"9\": [],\n  \"10\": [\n    {\n      id: \"18\",\n      payload: examplePayload3,\n    },\n    {\n      id: \"19\",\n      payload: examplePayload1,\n    },\n  ],\n}\n\nexport default Messages\n","import { Label, Message } from \"../models/gmail\"\nimport { Labels, Messages } from \"../mocks\"\n\nconst getLabels = (): Promise<Label[]> => {\n  return new Promise<Label[]>((resolve, reject) => {\n    resolve(Labels)\n  })\n}\n\nconst getMessages = (labelId: string): Promise<Message[]> => {\n  return new Promise<Message[]>((resolve, reject) => {\n    resolve(Messages[labelId])\n  })\n}\n\nexport {\n  getLabels,\n  getMessages,\n}\n","import React from \"react\"\nimport { Label, Message } from \"../models/gmail\"\nimport { getMessages } from \"../api/MailApiMock\"\n\nexport const SET_LABEL = 'SET_LABEL'\nexport const SET_LABELS = 'SET_LABELS'\nexport const SET_MESSAGE = 'SET_MESSAGE'\nexport const SET_MESSAGES = 'SET_MESSAGES'\n\ninterface SetLabel {\n  type: typeof SET_LABEL\n  payload: Label\n}\n\ninterface SetMessage {\n  type: typeof SET_MESSAGE\n  payload: Message | undefined\n}\n\ninterface SetMessages {\n  type: typeof SET_MESSAGES\n  payload: Message[]\n}\n\nexport type ActionTypes = SetLabel | SetMessage | SetMessages\n\nexport const setLabel = (dispatch: React.Dispatch<ActionTypes>, label: Label) => {\n  dispatch({ type: SET_LABEL, payload: label })\n}\n\nexport const setMessage = (dispatch: React.Dispatch<ActionTypes>, message?: Message) => {\n  dispatch({ type: SET_MESSAGE, payload: message })\n}\n\nexport const setMessages = async (dispatch: React.Dispatch<ActionTypes>, label: Label) => {\n  const messages = await getMessages(label.id)\n  dispatch({ type: SET_MESSAGES, payload: messages })\n}\n","import { ActionTypes, SET_LABEL, SET_MESSAGE, SET_MESSAGES } from \"./actions\"\nimport MailState from \"./state\"\n\nconst mailReducer = (state: MailState, action: ActionTypes): MailState => {\n  switch (action.type) {\n    case SET_LABEL:\n      return { ...state, selectedLabel: action.payload }\n    case SET_MESSAGE:\n      return { ...state, selectedMessage: action.payload }\n    case SET_MESSAGES:\n      return { ...state, messages: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default mailReducer\n","import React, { useReducer, createContext, ReactNode } from \"react\"\nimport { ActionTypes } from \"./actions\"\nimport MailState from \"./state\"\nimport mailReducer from \"./reducer\"\n\ninterface ProviderProps {\n  children: ReactNode\n}\n\ninterface ContextProps {\n  state: MailState;\n  dispatch: React.Dispatch<ActionTypes>\n}\n\nlet initialState: MailState = {\n  labels: [\n    {\n      id: \"1\",\n      name: \"Inbox\",\n      type: \"System\",\n      messagesUnread: 3,\n    },\n    {\n      id: \"2\",\n      name: \"Snoozed\",\n      type: \"System\",\n      messagesUnread: 0,\n    },\n  ],\n  messages: [],\n  selectedMessage: undefined,\n  selectedLabel: { id: \"1\", name: \"Inbox\", type: \"System\", messagesUnread: 3 },\n}\n\nconst MailContext = createContext({ state: initialState } as ContextProps)\n\nconst MailContextProvider = (props: ProviderProps) => {\n  const [state, dispatch] = useReducer(mailReducer, initialState)\n\n  return <MailContext.Provider value={{state, dispatch}}>{props.children}</MailContext.Provider>\n}\n\nlet MailContextConsumer = MailContext.Consumer\n\nexport {\n  MailContext,\n  MailContextProvider,\n  MailContextConsumer\n}\n","import 'typeface-roboto'\nimport React, { FunctionComponent, useState, useEffect, useContext } from 'react'\nimport { Avatar } from \"./MaterialUI\"\nimport { css } from \"emotion\"\nimport { Logo, LabelPane, MessagePane, RightPaneContainer, Toolbar } from \".\"\nimport { MailContextConsumer } from \"../store/StoreProvider\"\nimport { Label as LabelModel } from \"../models/gmail\"\nimport { getLabels } from '../api/MailApiMock'\nimport { setMessages } from '../store/actions'\nimport { MailContext } from \"../store/StoreProvider\"\n\nconst AppComponent: FunctionComponent = () => {\n  let { state, dispatch } = useContext(MailContext)\n  const { selectedLabel, selectedMessage, messages } = state\n  const [labels, setLabels] = useState<LabelModel[]>([])\n\n  useEffect(() => {\n    if (labels.length === 0) {\n      getLabels().then(apiLabels => setLabels(apiLabels))\n      setMessages(dispatch, state.selectedLabel)\n    }\n  }, [labels, dispatch, state.selectedLabel])\n\n  return (\n    <MailContextConsumer>\n      {() =>\n        <>\n          <div className={styles.header}>\n            <Logo />\n            <div className={styles.headerRight}>\n              <Avatar className={styles.avatar}>SM</Avatar>\n            </div>\n          </div>\n          <Toolbar />\n          <div className={styles.panes}> \n            <LabelPane labels={labels} />\n            <MessagePane selectedLabel={selectedLabel} messages={messages} />\n            <RightPaneContainer selectedMessage={selectedMessage} messages={messages} />\n          </div>\n        </>\n      }\n    </MailContextConsumer>\n  )\n}\n\nconst styles = {\n  header: css({\n    display: \"flex\",\n    position: \"relative\",\n    boxShadow: \"0 2px 7px 0 rgba(0, 0, 0, 0.1), 0 6px 28px 0 rgba(0, 0, 0, -0.81)\"\n  }),\n  headerRight: css({\n    paddingRight: \"30px\",\n    alignItems: \"center\",\n    display: \"flex\",\n  }),\n  headerLeft: css({\n    flex: 1,\n  }),\n  avatar: css({\n    marginLeft: \"auto\",\n    alignItems: \"center\",\n    background: \"green !important\",\n    cursor: \"pointer\",\n  }),\n  panes: css({\n    height: \"calc(100vh - 155px)\",\n    display: \"flex\",\n    padding: \"0 30px 0\",\n  }),\n}\n\nexport default AppComponent\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\n\ninterface EmptyStateProps {\n  label: string\n}\n\nconst EmptyState: FunctionComponent<EmptyStateProps> = ({ label }) => {\n  return (\n    <div className={styles.emptyState}>\n      <img width=\"275px\" alt=\"\" src=\"https://cdn4.iconfinder.com/data/icons/flatified/512/envelope.png\" />\n      <br />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nconst styles = {\n  emptyState: css({\n    marginTop: \"10px\",\n    textAlign: \"center\"\n  }),\n}\n\nexport default EmptyState\n","import React, { FunctionComponent, useContext, useEffect } from \"react\"\nimport { css, cx } from \"emotion\"\nimport { Typography } from \"./MaterialUI\"\nimport { MailContext } from \"../store/StoreProvider\"\nimport * as Actions from \"../store/actions\"\nimport { Label } from \"../models/gmail\"\nimport * as Constants from \"../constants\"\n\ninterface LabelProps {\n  label: Label,\n}\n\nconst LabelComponent: FunctionComponent<LabelProps> = ({ label, children }) => {\n  let { state, dispatch } = useContext(MailContext)\n  const { name, messagesUnread } = label\n  const selected = state.selectedLabel.name === name\n\n  useEffect(() => {\n    let title = Constants.APP_TITLE\n    if (state.selectedLabel.messagesUnread) {\n      title += ` (${state.selectedLabel.messagesUnread})`\n    }\n\n    window.document.title = title\n  }, [state.selectedLabel])\n\n  return (\n    <div\n      className={cx(styles.label, { [styles.selected]: selected })}\n      onClick={() => {\n        Actions.setLabel(dispatch, label)\n        Actions.setMessage(dispatch, undefined)\n        Actions.setMessages(dispatch, label)\n        \n      }}\n    >\n      {children}\n      <Typography variant=\"subtitle2\" style={{ margin: \"2px auto 0 4px\", display: \"flex\", width: \"100%\" }} gutterBottom>\n        <div style={{flex:1}}>{name}</div>\n        {messagesUnread !== 0 && <div style={{ marginRight: \"10px\" }}>{messagesUnread}</div>}\n      </Typography>\n    </div>\n  )\n}\n\nconst styles = {\n  label: css({\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"darkgray\",\n    padding: \"5px 0\",\n    \":hover\": {\n      color: \"#2979FF\",\n      cursor: \"pointer\",\n    },\n  }),\n  selected: css({\n    color: \"#2979FF\",\n    fontWeight: \"bold\",\n  })\n}\n\nexport default LabelComponent\n","export const APP_TITLE = \"GoJ Mail\"\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport {\n  InboxIcon,\n  SnoozeIcon,\n  LabelImportantIcon,\n  StarRateIcon,\n  SendIcon,\n  DraftsIcon,\n  ReportIcon,\n  DeleteIcon,\n  LensIcon,\n  Typography,\n} from \"./MaterialUI\"\nimport Label from \"./Label\"\nimport { Label as LabelModel } from \"../models/gmail\"\n\ninterface LabelPaneProps {\n  labels: LabelModel[]\n}\n\nconst LabelPane: FunctionComponent<LabelPaneProps> = ({ labels }) => {\n  const systemLabels = labels.filter(label => label.type === \"System\")\n  const userLabels = labels.filter(label => label.type === \"User\")\n\n  return (\n    <div className={styles.labelPanel}>\n      <Typography variant=\"h5\" gutterBottom>Mail</Typography>\n      {\n        systemLabels.map((label, index) => {\n          return (\n            <Label key={index} label={label}>\n              {STANDARD_ICONS[label.name]}\n            </Label>\n          )\n        }) \n      }\n      <div className={styles.buffer} />\n      <Typography variant=\"h5\">Folders</Typography>\n      {\n        userLabels.map((label, index) => {\n          const color: string = (label.color?.backgroundColor || \"gray\")\n          return (\n            <Label key={index} label={label}>\n              <LensIcon style={{ height: \"10px\", color }} />\n            </Label>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nconst styles = {\n  labelPanel: css({\n    flex: \"0 0 165px\",\n    padding: \"20px 0\",\n    color: \"#585858\",\n  }),\n  standardIcon: {\n    height: \"16px\"\n  },\n  buffer: css({\n    paddingTop: \"10px\",\n  }),\n}\n\nconst STANDARD_ICONS: { [key: string]: JSX.Element } = {\n  \"Inbox\": <InboxIcon style={styles.standardIcon} />,\n  \"Snoozed\": <SnoozeIcon style={styles.standardIcon} />,\n  \"Important\": <LabelImportantIcon style={styles.standardIcon} />,\n  \"Starred\": <StarRateIcon />,\n  \"Sent\": <SendIcon style={styles.standardIcon} />,\n  \"Drafts\": <DraftsIcon style={styles.standardIcon} />,\n  \"Spam\": <ReportIcon style={styles.standardIcon} />,\n  \"Trash\": <DeleteIcon style={styles.standardIcon} />,\n}\n\nexport default LabelPane\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport { Typography } from \"./MaterialUI\" \n\nconst Logo: FunctionComponent = () => {\n  return (\n    <div className={styles.logo}>\n      <Typography variant=\"h4\" className={styles.typography} style={{ fontWeight: \"bold\" }}>\n        <label className={styles.G}>G</label>\n        <label className={styles.O}>O</label>\n        <label className={styles.J}>J</label>\n        <img\n          alt=\"\"\n          className={styles.image}\n          src=\"https://lh3.googleusercontent.com/proxy/vdq9qUoDL2RB20Y9hxeXtnFL-3Z-x161Z5YNfZ8TkXFa4yZ8eUHz68QB57oj4mLwnF-hfP6gsruIEeV7MZ4rn0gc7Vj1pk7qVDMNtqoJVlTFfoWViVtIkUFoU2XUFcNZOGqY1aU\" />\n      </Typography>\n    </div>\n  )\n}\n\nconst styles = {\n  typography: css({\n    letterSpacing: \"2px\",\n    padding: \"15px 15px 15px 30px\",\n  }),\n  image: css({\n    height: \"39px\",\n    margin: \"-7px\",\n    paddingLeft: \"16px\",\n  }),\n  logo: css({\n    flex: 1,\n  }),\n  G: css({\n    color: \"#2979FF\",\n  }),\n  O: css({\n    color: \"red\",\n  }),\n  J: css({\n    color: \"#FDD835\",\n  }),\n}\n\nexport default Logo\n","import React, { FunctionComponent, useState, useEffect, useContext } from \"react\"\nimport { css, cx } from \"emotion\"\nimport { AttachFileIcon, Typography } from \"./MaterialUI\"\nimport { Message } from \"../models/gmail\"\nimport { MailContext } from \"../store/StoreProvider\"\nimport { setMessage } from \"../store/actions\"\n\nconst HEADERS = {\n  SUBJECT: \"subject\",\n  FROM: \"from\",\n  DATE: \"date\",\n}\n\ninterface MessageComponentProps {\n  index: number\n  message: Message\n}\n\nconst MessageComponent: FunctionComponent<MessageComponentProps> = ({ index, message }) => {\n  const [isSelected, setSelected] = useState(false)\n  const [subject, setSubject] = useState(\"\")\n  const [from, setFrom] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n\n  let { dispatch } = useContext(MailContext)\n\n  useEffect(()=> {\n    if (message.payload) {\n      const { headers } = message.payload\n\n      const getHeaderValue = (name: string) => {\n        if (!headers) return undefined\n        const header = headers.find(header => header.name === name)\n      \n        if (!header) return undefined\n        return header.value\n      }\n\n      const subject = getHeaderValue(HEADERS.SUBJECT)\n      const from = getHeaderValue(HEADERS.FROM)\n      const date = getHeaderValue(HEADERS.DATE)\n\n      if (subject) setSubject(subject)\n      if (from) setFrom(from)\n      if (date) setDate(date)\n    }\n  },[message.payload])\n\n  return (\n    <div\n      className={cx(styles.message, { [styles.altBackground]: index%2 === 0 })}\n      onClick={() => {\n        setSelected(!isSelected)\n        setMessage(dispatch, message)\n      }}\n    >\n      <div className={cx(styles.leftSide, { [styles.selected]: isSelected })} />\n      <div className={styles.contents}>\n        <div style={{ flex: 1 }}>\n          <label className={styles.subject}>{subject}</label>\n          <Typography\n            variant=\"caption\"\n            display=\"block\"\n            style={styles.sender}\n            gutterBottom>\n            {from}\n          </Typography>\n        </div>\n        <div className={styles.rightSide}>\n          <AttachFileIcon />\n          <Typography\n            variant=\"caption\"\n            display=\"block\"\n            style={styles.sender}\n            gutterBottom>\n            {date}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  message: css({\n    display: \"flex\",\n    cursor: \"pointer\",\n    backgroundColor: \"#F9F9F8\",\n    \":hover\": {\n      backgroundColor: \"#BBDEFB\"\n    },\n  }),\n  altBackground: css({\n    backgroundColor: \"#F1F1F1\",\n  }),\n  contents: css({\n    flex: 1,\n    display: \"flex\",\n    padding: \"20px 20px 10px 20px\",\n    color: \"#585858\",\n  }),\n  subject: css({\n    padding: \"10px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    maxWidth: \"232px\",\n    display: \"block\",\n    cursor: \"pointer\",\n  }),\n  sender: {\n    padding: \"10px 10px 10px 12px\",\n  },\n  leftSide: css({\n    flex: \"0 3px\",\n  }),\n  rightSide: css({\n    flex: \"0 90px\",\n    alignItems: \"center\",\n    display: \"flex\",\n    margin: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  }),\n  selected: css({\n    backgroundColor: \"red\",\n  }),\n}\n\nexport default MessageComponent\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport { Label, Message } from \"../models/gmail\"\nimport { MessageComponent, EmptyState } from \".\"\n\ninterface PaneProps {\n  selectedLabel: Label\n  messages: Message[]\n}\n\nconst MessagePane: FunctionComponent<PaneProps> = ({ selectedLabel, messages }) => {\n  return (\n    <div className={styles.messagePane}>\n    {\n      messages.map((message: Message, index: number) =>  {\n        return ( \n          <MessageComponent\n            key={index}\n            index={index}\n            message={message}\n          />\n        )}\n      )\n    }\n    {\n      messages.length === 0 &&\n      <EmptyState label={`Nothing in ${selectedLabel.name}!`} />\n    }\n  </div>\n  )\n}\n\nconst styles = {\n  messagePane: css({\n    flex: \"0 400px\",\n    overflowY: \"auto\",\n    borderLeft: \"1px solid #F4F4F4\",\n  }),\n}\n\nexport default MessagePane\n","import React, { FunctionComponent } from \"react\"\n\ninterface BufferProps {\n  height: number\n}\n\nconst Buffer: FunctionComponent<BufferProps> = ({ height }) => {\n  return <div style={{ paddingTop: `${height}px`}} />\n}\n\nexport default Buffer","import React, { FunctionComponent, useState, useEffect } from \"react\"\nimport { Typography } from \"./MaterialUI\"\nimport Buffer from \"./Buffer\"\nimport { Message, MessagePartHeader } from \"../models/gmail\"\nimport ReactHtmlParser from \"react-html-parser\"\n\nconst HEADERS = {\n  SUBJECT: \"subject\",\n  FROM: \"from\",\n  DATE: \"date\",\n  TO: \"to\",\n}\n\ninterface PreviewPanelProps {\n  message: Message\n}\n\nconst PreviewPane: FunctionComponent<PreviewPanelProps> = ({  message }) => {\n  const [subject, setSubject] = useState(\"\")\n  const [from, setFrom] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [tos, setTos] = useState<MessagePartHeader[]>([])\n\n  useEffect(()=> {\n    if (message.payload) {\n      const { headers } = message.payload\n\n      const getHeaderValue = (name: string) => {\n        if (!headers) return undefined\n        const header = headers.find(header => header.name === name)\n      \n        if (!header) return undefined\n        return header.value\n      }\n\n      const subject = getHeaderValue(HEADERS.SUBJECT)\n      const from = getHeaderValue(HEADERS.FROM)\n      const date = getHeaderValue(HEADERS.DATE)\n      let tos: MessagePartHeader[] = []\n\n      if (headers) {\n        tos = headers.filter(header => header.name === HEADERS.TO)\n        setTos(tos)\n      }\n\n      if (subject) setSubject(subject)\n      if (from) setFrom(from)\n      if (date) setDate(date)\n    }\n  },[message.payload])\n\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>{subject}</Typography>\n      <Typography variant=\"caption\" gutterBottom>{from}</Typography>\n      <br></br>\n      <Typography variant=\"caption\" gutterBottom>\n      {\n        tos.map((to, index) => {\n          return (\n            <span key={index}>{to.value}; </span>\n          )\n        })\n      }\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        {date}\n      </Typography>\n      </Typography>\n      <Buffer height={10} />\n      <div>\n        {\n          message.payload && \n          message.payload.body && \n          message.payload.body.data && \n          ReactHtmlParser(atob(message.payload.body.data)) \n        }\n      </div>\n    </>\n  )\n}\n\nexport default PreviewPane\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport { Message } from \"../models/gmail\"\nimport { PreviewPane, EmptyState } from \".\"\n\ninterface ContainerProps {\n  selectedMessage: Message | undefined\n  messages: Message[]\n}\n\nconst RightPaneContainer: FunctionComponent<ContainerProps> = ({ selectedMessage, messages }) => {\n  return (\n    <div className={styles.previewPanel}>\n    {\n      selectedMessage &&\n      <PreviewPane message={selectedMessage} />\n    }\n    {\n      !selectedMessage && \n      messages.length !== 0 &&\n      <EmptyState label=\"Select an item to read!\" />\n    }\n    </div>\n  )\n}\n\nconst appBorder = \"2px solid #F4F4F4\"\n\nconst styles = {\n  previewPanel: css({\n    flex: 1,\n    color: \"#585858\",\n    padding: \"20px 30px\",\n    overflowY: \"auto\",\n    borderLeft: appBorder,\n  }),\n}\n\nexport default RightPaneContainer\n","import React, { FunctionComponent } from \"react\"\nimport { css } from \"emotion\"\nimport { Input, InputAdornment, SearchIcon } from \"./MaterialUI\"\n\nconst Toolbar: FunctionComponent = () => {\n  return (\n    <div className={styles.toolbar}>\n      <Input\n        id=\"standard-adornment-amount\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchIcon style={{ color: \"#2979FF\" }}/>\n          </InputAdornment>\n        }\n      />\n    </div>\n  )\n}\n\nconst appBorder = \"2px solid #F4F4F4\"\n\nconst styles = {\n  toolbar: css({\n    height: \"80px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 30px 0\",\n    backgroundColor: \"#FCFCFA\",\n    color: \"#2962FF\",\n    borderBottom: appBorder,\n  }),\n}\n\nexport default Toolbar\n","import 'typeface-roboto'\nimport React from 'react'\nimport { AppComponent } from \"./components\"\nimport { MailContextProvider } from \"./store/StoreProvider\"\n\nfunction App() {\n  return (\n    <MailContextProvider>\n      <AppComponent />\n    </MailContextProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}